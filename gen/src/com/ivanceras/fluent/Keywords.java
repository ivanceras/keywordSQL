
package com.ivanceras.fluent;
/**
* DO NOT MODIFY - This code is generated by com.ivanceras.fluent.generators.KeywordGenerator
*
*/
public abstract class Keywords extends BaseSQL{


	public SQL A(){
		return keyword("A");
	}
	public SQL ABORT(){
		return keyword("ABORT");
	}
	public SQL ABS(){
		return keyword("ABS");
	}
	public SQL ABSENT(){
		return keyword("ABSENT");
	}
	public SQL ABSOLUTE(){
		return keyword("ABSOLUTE");
	}
	public SQL ACCESS(){
		return keyword("ACCESS");
	}
	public SQL ACCESSIBLE(){
		return keyword("ACCESSIBLE");
	}
	public SQL ACCORDING(){
		return keyword("ACCORDING");
	}
	public SQL ACTION(){
		return keyword("ACTION");
	}
	public SQL ADA(){
		return keyword("ADA");
	}
	public SQL ADD(){
		return keyword("ADD");
	}
	public SQL ADMIN(){
		return keyword("ADMIN");
	}
	public SQL AFTER(){
		return keyword("AFTER");
	}
	public SQL AGGREGATE(){
		return keyword("AGGREGATE");
	}
	public SQL ALL(){
		return keyword("ALL");
	}
	public SQL ALLOCATE(){
		return keyword("ALLOCATE");
	}
	public SQL ALSO(){
		return keyword("ALSO");
	}
	public SQL ALTER(){
		return keyword("ALTER");
	}
	public SQL ALWAYS(){
		return keyword("ALWAYS");
	}
	public SQL ANALYSE(){
		return keyword("ANALYSE");
	}
	public SQL ANALYZE(){
		return keyword("ANALYZE");
	}
	public SQL AND(){
		return keyword("AND");
	}
	public SQL ANY(){
		return keyword("ANY");
	}
	public SQL ARE(){
		return keyword("ARE");
	}
	public SQL ARRAY(){
		return keyword("ARRAY");
	}
	public SQL ARRAY_AGG(){
		return keyword("ARRAY_AGG");
	}
	public SQL ARRAY_MAX_CARDINALITY(){
		return keyword("ARRAY_MAX_CARDINALITY");
	}
	public SQL ARROW(){
		return keyword("ARROW");
	}
	public SQL AS(){
		return keyword("AS");
	}
	public SQL ASC(){
		return keyword("ASC");
	}
	public SQL ASENSITIVE(){
		return keyword("ASENSITIVE");
	}
	public SQL ASSERTION(){
		return keyword("ASSERTION");
	}
	public SQL ASSIGNMENT(){
		return keyword("ASSIGNMENT");
	}
	public SQL ASYMMETRIC(){
		return keyword("ASYMMETRIC");
	}
	public SQL AT(){
		return keyword("AT");
	}
	public SQL ATOMIC(){
		return keyword("ATOMIC");
	}
	public SQL ATTACH(){
		return keyword("ATTACH");
	}
	public SQL ATTRIBUTE(){
		return keyword("ATTRIBUTE");
	}
	public SQL ATTRIBUTES(){
		return keyword("ATTRIBUTES");
	}
	public SQL AUTHORIZATION(){
		return keyword("AUTHORIZATION");
	}
	public SQL AUTOINCREMENT(){
		return keyword("AUTOINCREMENT");
	}
	public SQL AVG(){
		return keyword("AVG");
	}
	public SQL BACKWARD(){
		return keyword("BACKWARD");
	}
	public SQL BASE64(){
		return keyword("BASE64");
	}
	public SQL BEFORE(){
		return keyword("BEFORE");
	}
	public SQL BEGIN(){
		return keyword("BEGIN");
	}
	public SQL BEGIN_FRAME(){
		return keyword("BEGIN_FRAME");
	}
	public SQL BEGIN_PARTITION(){
		return keyword("BEGIN_PARTITION");
	}
	public SQL BERNOULLI(){
		return keyword("BERNOULLI");
	}
	public SQL BETWEEN(){
		return keyword("BETWEEN");
	}
	public SQL BIGINT(){
		return keyword("BIGINT");
	}
	public SQL BINARY(){
		return keyword("BINARY");
	}
	public SQL BIT(){
		return keyword("BIT");
	}
	public SQL BIT_LENGTH(){
		return keyword("BIT_LENGTH");
	}
	public SQL BLOB(){
		return keyword("BLOB");
	}
	public SQL BLOCKED(){
		return keyword("BLOCKED");
	}
	public SQL BOM(){
		return keyword("BOM");
	}
	public SQL BOOLEAN(){
		return keyword("BOOLEAN");
	}
	public SQL BOTH(){
		return keyword("BOTH");
	}
	public SQL BREADTH(){
		return keyword("BREADTH");
	}
	public SQL BY(){
		return keyword("BY");
	}
	public SQL C(){
		return keyword("C");
	}
	public SQL CACHE(){
		return keyword("CACHE");
	}
	public SQL CALL(){
		return keyword("CALL");
	}
	public SQL CALLED(){
		return keyword("CALLED");
	}
	public SQL CARDINALITY(){
		return keyword("CARDINALITY");
	}
	public SQL CASCADE(){
		return keyword("CASCADE");
	}
	public SQL CASCADED(){
		return keyword("CASCADED");
	}
	public SQL CASE(){
		return keyword("CASE");
	}
	public SQL CAST(){
		return keyword("CAST");
	}
	public SQL CATALOG(){
		return keyword("CATALOG");
	}
	public SQL CATALOG_NAME(){
		return keyword("CATALOG_NAME");
	}
	public SQL CEIL(){
		return keyword("CEIL");
	}
	public SQL CEILING(){
		return keyword("CEILING");
	}
	public SQL CHAIN(){
		return keyword("CHAIN");
	}
	public SQL CHANGE(){
		return keyword("CHANGE");
	}
	public SQL CHAR(){
		return keyword("CHAR");
	}
	public SQL CHARACTER(){
		return keyword("CHARACTER");
	}
	public SQL CHARACTERISTICS(){
		return keyword("CHARACTERISTICS");
	}
	public SQL CHARACTERS(){
		return keyword("CHARACTERS");
	}
	public SQL CHARACTER_LENGTH(){
		return keyword("CHARACTER_LENGTH");
	}
	public SQL CHARACTER_SET_CATALOG(){
		return keyword("CHARACTER_SET_CATALOG");
	}
	public SQL CHARACTER_SET_NAME(){
		return keyword("CHARACTER_SET_NAME");
	}
	public SQL CHARACTER_SET_SCHEMA(){
		return keyword("CHARACTER_SET_SCHEMA");
	}
	public SQL CHAR_LENGTH(){
		return keyword("CHAR_LENGTH");
	}
	public SQL CHECK(){
		return keyword("CHECK");
	}
	public SQL CHECKPOINT(){
		return keyword("CHECKPOINT");
	}
	public SQL CLASS(){
		return keyword("CLASS");
	}
	public SQL CLASS_ORIGIN(){
		return keyword("CLASS_ORIGIN");
	}
	public SQL CLOB(){
		return keyword("CLOB");
	}
	public SQL CLOSE(){
		return keyword("CLOSE");
	}
	public SQL CLUSTER(){
		return keyword("CLUSTER");
	}
	public SQL CLUSTERS(){
		return keyword("CLUSTERS");
	}
	public SQL COALESCE(){
		return keyword("COALESCE");
	}
	public SQL COBOL(){
		return keyword("COBOL");
	}
	public SQL COLAUTH(){
		return keyword("COLAUTH");
	}
	public SQL COLLATE(){
		return keyword("COLLATE");
	}
	public SQL COLLATION(){
		return keyword("COLLATION");
	}
	public SQL COLLATION_CATALOG(){
		return keyword("COLLATION_CATALOG");
	}
	public SQL COLLATION_NAME(){
		return keyword("COLLATION_NAME");
	}
	public SQL COLLATION_SCHEMA(){
		return keyword("COLLATION_SCHEMA");
	}
	public SQL COLLECT(){
		return keyword("COLLECT");
	}
	public SQL COLUMN(){
		return keyword("COLUMN");
	}
	public SQL COLUMNS(){
		return keyword("COLUMNS");
	}
	public SQL COLUMN_NAME(){
		return keyword("COLUMN_NAME");
	}
	public SQL COMMAND_FUNCTION(){
		return keyword("COMMAND_FUNCTION");
	}
	public SQL COMMAND_FUNCTION_CODE(){
		return keyword("COMMAND_FUNCTION_CODE");
	}
	public SQL COMMENT(){
		return keyword("COMMENT");
	}
	public SQL COMMENTS(){
		return keyword("COMMENTS");
	}
	public SQL COMMIT(){
		return keyword("COMMIT");
	}
	public SQL COMMITTED(){
		return keyword("COMMITTED");
	}
	public SQL COMPRESS(){
		return keyword("COMPRESS");
	}
	public SQL CONCURRENTLY(){
		return keyword("CONCURRENTLY");
	}
	public SQL CONDITION(){
		return keyword("CONDITION");
	}
	public SQL CONDITION_NUMBER(){
		return keyword("CONDITION_NUMBER");
	}
	public SQL CONFIGURATION(){
		return keyword("CONFIGURATION");
	}
	public SQL CONFLICT(){
		return keyword("CONFLICT");
	}
	public SQL CONNECT(){
		return keyword("CONNECT");
	}
	public SQL CONNECTION(){
		return keyword("CONNECTION");
	}
	public SQL CONNECTION_NAME(){
		return keyword("CONNECTION_NAME");
	}
	public SQL CONSTRAINT(){
		return keyword("CONSTRAINT");
	}
	public SQL CONSTRAINTS(){
		return keyword("CONSTRAINTS");
	}
	public SQL CONSTRAINT_CATALOG(){
		return keyword("CONSTRAINT_CATALOG");
	}
	public SQL CONSTRAINT_NAME(){
		return keyword("CONSTRAINT_NAME");
	}
	public SQL CONSTRAINT_SCHEMA(){
		return keyword("CONSTRAINT_SCHEMA");
	}
	public SQL CONSTRUCTOR(){
		return keyword("CONSTRUCTOR");
	}
	public SQL CONTAINS(){
		return keyword("CONTAINS");
	}
	public SQL CONTENT(){
		return keyword("CONTENT");
	}
	public SQL CONTINUE(){
		return keyword("CONTINUE");
	}
	public SQL CONTROL(){
		return keyword("CONTROL");
	}
	public SQL CONVERSION(){
		return keyword("CONVERSION");
	}
	public SQL CONVERT(){
		return keyword("CONVERT");
	}
	public SQL COPY(){
		return keyword("COPY");
	}
	public SQL CORR(){
		return keyword("CORR");
	}
	public SQL CORRESPONDING(){
		return keyword("CORRESPONDING");
	}
	public SQL COST(){
		return keyword("COST");
	}
	public SQL COUNT(){
		return keyword("COUNT");
	}
	public SQL COVAR_POP(){
		return keyword("COVAR_POP");
	}
	public SQL COVAR_SAMP(){
		return keyword("COVAR_SAMP");
	}
	public SQL CRASH(){
		return keyword("CRASH");
	}
	public SQL CREATE(){
		return keyword("CREATE");
	}
	public SQL CROSS(){
		return keyword("CROSS");
	}
	public SQL CSV(){
		return keyword("CSV");
	}
	public SQL CUBE(){
		return keyword("CUBE");
	}
	public SQL CUME_DIST(){
		return keyword("CUME_DIST");
	}
	public SQL CURRENT(){
		return keyword("CURRENT");
	}
	public SQL CURRENT_CATALOG(){
		return keyword("CURRENT_CATALOG");
	}
	public SQL CURRENT_DATE(){
		return keyword("CURRENT_DATE");
	}
	public SQL CURRENT_DEFAULT_TRANSFORM_GROUP(){
		return keyword("CURRENT_DEFAULT_TRANSFORM_GROUP");
	}
	public SQL CURRENT_PATH(){
		return keyword("CURRENT_PATH");
	}
	public SQL CURRENT_ROLE(){
		return keyword("CURRENT_ROLE");
	}
	public SQL CURRENT_ROW(){
		return keyword("CURRENT_ROW");
	}
	public SQL CURRENT_SCHEMA(){
		return keyword("CURRENT_SCHEMA");
	}
	public SQL CURRENT_TIME(){
		return keyword("CURRENT_TIME");
	}
	public SQL CURRENT_TIMESTAMP(){
		return keyword("CURRENT_TIMESTAMP");
	}
	public SQL CURRENT_TRANSFORM_GROUP_FOR_TYPE(){
		return keyword("CURRENT_TRANSFORM_GROUP_FOR_TYPE");
	}
	public SQL CURRENT_USER(){
		return keyword("CURRENT_USER");
	}
	public SQL CURSOR(){
		return keyword("CURSOR");
	}
	public SQL CURSOR_NAME(){
		return keyword("CURSOR_NAME");
	}
	public SQL CYCLE(){
		return keyword("CYCLE");
	}
	public SQL DATA(){
		return keyword("DATA");
	}
	public SQL DATABASE(){
		return keyword("DATABASE");
	}
	public SQL DATABASES(){
		return keyword("DATABASES");
	}
	public SQL DATALINK(){
		return keyword("DATALINK");
	}
	public SQL DATE(){
		return keyword("DATE");
	}
	public SQL DATETIME_INTERVAL_CODE(){
		return keyword("DATETIME_INTERVAL_CODE");
	}
	public SQL DATETIME_INTERVAL_PRECISION(){
		return keyword("DATETIME_INTERVAL_PRECISION");
	}
	public SQL DAY(){
		return keyword("DAY");
	}
	public SQL DAY_HOUR(){
		return keyword("DAY_HOUR");
	}
	public SQL DAY_MICROSECOND(){
		return keyword("DAY_MICROSECOND");
	}
	public SQL DAY_MINUTE(){
		return keyword("DAY_MINUTE");
	}
	public SQL DAY_SECOND(){
		return keyword("DAY_SECOND");
	}
	public SQL DB(){
		return keyword("DB");
	}
	public SQL DEALLOCATE(){
		return keyword("DEALLOCATE");
	}
	public SQL DEC(){
		return keyword("DEC");
	}
	public SQL DECIMAL(){
		return keyword("DECIMAL");
	}
	public SQL DECLARE(){
		return keyword("DECLARE");
	}
	public SQL DEFAULT(){
		return keyword("DEFAULT");
	}
	public SQL DEFAULTS(){
		return keyword("DEFAULTS");
	}
	public SQL DEFERRABLE(){
		return keyword("DEFERRABLE");
	}
	public SQL DEFERRED(){
		return keyword("DEFERRED");
	}
	public SQL DEFINED(){
		return keyword("DEFINED");
	}
	public SQL DEFINER(){
		return keyword("DEFINER");
	}
	public SQL DEGREE(){
		return keyword("DEGREE");
	}
	public SQL DELAYED(){
		return keyword("DELAYED");
	}
	public SQL DELETE(){
		return keyword("DELETE");
	}
	public SQL DELIMITER(){
		return keyword("DELIMITER");
	}
	public SQL DELIMITERS(){
		return keyword("DELIMITERS");
	}
	public SQL DENSE_RANK(){
		return keyword("DENSE_RANK");
	}
	public SQL DEPTH(){
		return keyword("DEPTH");
	}
	public SQL DEREF(){
		return keyword("DEREF");
	}
	public SQL DERIVED(){
		return keyword("DERIVED");
	}
	public SQL DESC(){
		return keyword("DESC");
	}
	public SQL DESCRIBE(){
		return keyword("DESCRIBE");
	}
	public SQL DESCRIPTOR(){
		return keyword("DESCRIPTOR");
	}
	public SQL DETACH(){
		return keyword("DETACH");
	}
	public SQL DETERMINISTIC(){
		return keyword("DETERMINISTIC");
	}
	public SQL DIAGNOSTICS(){
		return keyword("DIAGNOSTICS");
	}
	public SQL DICTIONARY(){
		return keyword("DICTIONARY");
	}
	public SQL DISABLE(){
		return keyword("DISABLE");
	}
	public SQL DISCARD(){
		return keyword("DISCARD");
	}
	public SQL DISCONNECT(){
		return keyword("DISCONNECT");
	}
	public SQL DISPATCH(){
		return keyword("DISPATCH");
	}
	public SQL DISTINCT(){
		return keyword("DISTINCT");
	}
	public SQL DISTINCTROW(){
		return keyword("DISTINCTROW");
	}
	public SQL DIV(){
		return keyword("DIV");
	}
	public SQL DLNEWCOPY(){
		return keyword("DLNEWCOPY");
	}
	public SQL DLPREVIOUSCOPY(){
		return keyword("DLPREVIOUSCOPY");
	}
	public SQL DLURLCOMPLETE(){
		return keyword("DLURLCOMPLETE");
	}
	public SQL DLURLCOMPLETEONLY(){
		return keyword("DLURLCOMPLETEONLY");
	}
	public SQL DLURLCOMPLETEWRITE(){
		return keyword("DLURLCOMPLETEWRITE");
	}
	public SQL DLURLPATH(){
		return keyword("DLURLPATH");
	}
	public SQL DLURLPATHONLY(){
		return keyword("DLURLPATHONLY");
	}
	public SQL DLURLPATHWRITE(){
		return keyword("DLURLPATHWRITE");
	}
	public SQL DLURLSCHEME(){
		return keyword("DLURLSCHEME");
	}
	public SQL DLURLSERVER(){
		return keyword("DLURLSERVER");
	}
	public SQL DLVALUE(){
		return keyword("DLVALUE");
	}
	public SQL DO(){
		return keyword("DO");
	}
	public SQL DOCUMENT(){
		return keyword("DOCUMENT");
	}
	public SQL DOMAIN(){
		return keyword("DOMAIN");
	}
	public SQL DOUBLE(){
		return keyword("DOUBLE");
	}
	public SQL DROP(){
		return keyword("DROP");
	}
	public SQL DUAL(){
		return keyword("DUAL");
	}
	public SQL DYNAMIC(){
		return keyword("DYNAMIC");
	}
	public SQL DYNAMIC_FUNCTION(){
		return keyword("DYNAMIC_FUNCTION");
	}
	public SQL DYNAMIC_FUNCTION_CODE(){
		return keyword("DYNAMIC_FUNCTION_CODE");
	}
	public SQL EACH(){
		return keyword("EACH");
	}
	public SQL ELEMENT(){
		return keyword("ELEMENT");
	}
	public SQL ELSE(){
		return keyword("ELSE");
	}
	public SQL ELSEIF(){
		return keyword("ELSEIF");
	}
	public SQL EMPTY(){
		return keyword("EMPTY");
	}
	public SQL ENABLE(){
		return keyword("ENABLE");
	}
	public SQL ENCLOSED(){
		return keyword("ENCLOSED");
	}
	public SQL ENCODING(){
		return keyword("ENCODING");
	}
	public SQL ENCRYPTED(){
		return keyword("ENCRYPTED");
	}
	public SQL END(){
		return keyword("END");
	}
	public SQL END_EXEC(){
		return keyword("END-EXEC");
	}
	public SQL END_FRAME(){
		return keyword("END_FRAME");
	}
	public SQL END_PARTITION(){
		return keyword("END_PARTITION");
	}
	public SQL ENFORCED(){
		return keyword("ENFORCED");
	}
	public SQL ENUM(){
		return keyword("ENUM");
	}
	public SQL EQUALS(){
		return keyword("EQUALS");
	}
	public SQL ESCAPE(){
		return keyword("ESCAPE");
	}
	public SQL ESCAPED(){
		return keyword("ESCAPED");
	}
	public SQL EVENT(){
		return keyword("EVENT");
	}
	public SQL EVERY(){
		return keyword("EVERY");
	}
	public SQL EXCEPT(){
		return keyword("EXCEPT");
	}
	public SQL EXCEPTION(){
		return keyword("EXCEPTION");
	}
	public SQL EXCLUDE(){
		return keyword("EXCLUDE");
	}
	public SQL EXCLUDING(){
		return keyword("EXCLUDING");
	}
	public SQL EXCLUSIVE(){
		return keyword("EXCLUSIVE");
	}
	public SQL EXEC(){
		return keyword("EXEC");
	}
	public SQL EXECUTE(){
		return keyword("EXECUTE");
	}
	public SQL EXISTS(){
		return keyword("EXISTS");
	}
	public SQL EXIT(){
		return keyword("EXIT");
	}
	public SQL EXP(){
		return keyword("EXP");
	}
	public SQL EXPLAIN(){
		return keyword("EXPLAIN");
	}
	public SQL EXPRESSION(){
		return keyword("EXPRESSION");
	}
	public SQL EXTENSION(){
		return keyword("EXTENSION");
	}
	public SQL EXTERNAL(){
		return keyword("EXTERNAL");
	}
	public SQL EXTRACT(){
		return keyword("EXTRACT");
	}
	public SQL FAIL(){
		return keyword("FAIL");
	}
	public SQL FALSE(){
		return keyword("FALSE");
	}
	public SQL FAMILY(){
		return keyword("FAMILY");
	}
	public SQL FETCH(){
		return keyword("FETCH");
	}
	public SQL FILE(){
		return keyword("FILE");
	}
	public SQL FILTER(){
		return keyword("FILTER");
	}
	public SQL FINAL(){
		return keyword("FINAL");
	}
	public SQL FIRST(){
		return keyword("FIRST");
	}
	public SQL FIRST_VALUE(){
		return keyword("FIRST_VALUE");
	}
	public SQL FLAG(){
		return keyword("FLAG");
	}
	public SQL FLOAT(){
		return keyword("FLOAT");
	}
	public SQL FLOAT4(){
		return keyword("FLOAT4");
	}
	public SQL FLOAT8(){
		return keyword("FLOAT8");
	}
	public SQL FLOOR(){
		return keyword("FLOOR");
	}
	public SQL FOLLOWING(){
		return keyword("FOLLOWING");
	}
	public SQL FOR(){
		return keyword("FOR");
	}
	public SQL FORCE(){
		return keyword("FORCE");
	}
	public SQL FOREIGN(){
		return keyword("FOREIGN");
	}
	public SQL FORM(){
		return keyword("FORM");
	}
	public SQL FORTRAN(){
		return keyword("FORTRAN");
	}
	public SQL FORWARD(){
		return keyword("FORWARD");
	}
	public SQL FOUND(){
		return keyword("FOUND");
	}
	public SQL FRAME_ROW(){
		return keyword("FRAME_ROW");
	}
	public SQL FREE(){
		return keyword("FREE");
	}
	public SQL FREEZE(){
		return keyword("FREEZE");
	}
	public SQL FROM(){
		return keyword("FROM");
	}
	public SQL FS(){
		return keyword("FS");
	}
	public SQL FULL(){
		return keyword("FULL");
	}
	public SQL FULLTEXT(){
		return keyword("FULLTEXT");
	}
	public SQL FUNCTION(){
		return keyword("FUNCTION");
	}
	public SQL FUNCTIONS(){
		return keyword("FUNCTIONS");
	}
	public SQL FUSION(){
		return keyword("FUSION");
	}
	public SQL G(){
		return keyword("G");
	}
	public SQL GENERAL(){
		return keyword("GENERAL");
	}
	public SQL GENERATED(){
		return keyword("GENERATED");
	}
	public SQL GET(){
		return keyword("GET");
	}
	public SQL GLOB(){
		return keyword("GLOB");
	}
	public SQL GLOBAL(){
		return keyword("GLOBAL");
	}
	public SQL GO(){
		return keyword("GO");
	}
	public SQL GOTO(){
		return keyword("GOTO");
	}
	public SQL GRANT(){
		return keyword("GRANT");
	}
	public SQL GRANTED(){
		return keyword("GRANTED");
	}
	public SQL GREATEST(){
		return keyword("GREATEST");
	}
	public SQL GROUP(){
		return keyword("GROUP");
	}
	public SQL GROUPING(){
		return keyword("GROUPING");
	}
	public SQL GROUPS(){
		return keyword("GROUPS");
	}
	public SQL HANDLER(){
		return keyword("HANDLER");
	}
	public SQL HAVING(){
		return keyword("HAVING");
	}
	public SQL HEADER(){
		return keyword("HEADER");
	}
	public SQL HEX(){
		return keyword("HEX");
	}
	public SQL HIERARCHY(){
		return keyword("HIERARCHY");
	}
	public SQL HIGH_PRIORITY(){
		return keyword("HIGH_PRIORITY");
	}
	public SQL HOLD(){
		return keyword("HOLD");
	}
	public SQL HOUR(){
		return keyword("HOUR");
	}
	public SQL HOUR_MICROSECOND(){
		return keyword("HOUR_MICROSECOND");
	}
	public SQL HOUR_MINUTE(){
		return keyword("HOUR_MINUTE");
	}
	public SQL HOUR_SECOND(){
		return keyword("HOUR_SECOND");
	}
	public SQL ID(){
		return keyword("ID");
	}
	public SQL IDENTIFIED(){
		return keyword("IDENTIFIED");
	}
	public SQL IDENTITY(){
		return keyword("IDENTITY");
	}
	public SQL IF(){
		return keyword("IF");
	}
	public SQL IGNORE(){
		return keyword("IGNORE");
	}
	public SQL IGNORE_SERVER_IDS(){
		return keyword("IGNORE_SERVER_IDS");
	}
	public SQL ILIKE(){
		return keyword("ILIKE");
	}
	public SQL IMMEDIATE(){
		return keyword("IMMEDIATE");
	}
	public SQL IMMEDIATELY(){
		return keyword("IMMEDIATELY");
	}
	public SQL IMMUTABLE(){
		return keyword("IMMUTABLE");
	}
	public SQL IMPLEMENTATION(){
		return keyword("IMPLEMENTATION");
	}
	public SQL IMPLICIT(){
		return keyword("IMPLICIT");
	}
	public SQL IMPORT(){
		return keyword("IMPORT");
	}
	public SQL IN(){
		return keyword("IN");
	}
	public SQL INCLUDING(){
		return keyword("INCLUDING");
	}
	public SQL INCREMENT(){
		return keyword("INCREMENT");
	}
	public SQL INDENT(){
		return keyword("INDENT");
	}
	public SQL INDEX(){
		return keyword("INDEX");
	}
	public SQL INDEXED(){
		return keyword("INDEXED");
	}
	public SQL INDEXES(){
		return keyword("INDEXES");
	}
	public SQL INDICATOR(){
		return keyword("INDICATOR");
	}
	public SQL INFILE(){
		return keyword("INFILE");
	}
	public SQL INHERIT(){
		return keyword("INHERIT");
	}
	public SQL INHERITS(){
		return keyword("INHERITS");
	}
	public SQL INITIALLY(){
		return keyword("INITIALLY");
	}
	public SQL INLINE(){
		return keyword("INLINE");
	}
	public SQL INNER(){
		return keyword("INNER");
	}
	public SQL INOUT(){
		return keyword("INOUT");
	}
	public SQL INPUT(){
		return keyword("INPUT");
	}
	public SQL INSENSITIVE(){
		return keyword("INSENSITIVE");
	}
	public SQL INSERT(){
		return keyword("INSERT");
	}
	public SQL INSTANCE(){
		return keyword("INSTANCE");
	}
	public SQL INSTANTIABLE(){
		return keyword("INSTANTIABLE");
	}
	public SQL INSTEAD(){
		return keyword("INSTEAD");
	}
	public SQL INT(){
		return keyword("INT");
	}
	public SQL INT1(){
		return keyword("INT1");
	}
	public SQL INT2(){
		return keyword("INT2");
	}
	public SQL INT3(){
		return keyword("INT3");
	}
	public SQL INT4(){
		return keyword("INT4");
	}
	public SQL INT8(){
		return keyword("INT8");
	}
	public SQL INTEGER(){
		return keyword("INTEGER");
	}
	public SQL INTEGRITY(){
		return keyword("INTEGRITY");
	}
	public SQL INTERSECT(){
		return keyword("INTERSECT");
	}
	public SQL INTERSECTION(){
		return keyword("INTERSECTION");
	}
	public SQL INTERVAL(){
		return keyword("INTERVAL");
	}
	public SQL INTO(){
		return keyword("INTO");
	}
	public SQL INVOKER(){
		return keyword("INVOKER");
	}
	public SQL IS(){
		return keyword("IS");
	}
	public SQL ISNULL(){
		return keyword("ISNULL");
	}
	public SQL ISOLATION(){
		return keyword("ISOLATION");
	}
	public SQL ITERATE(){
		return keyword("ITERATE");
	}
	public SQL JOIN(){
		return keyword("JOIN");
	}
	public SQL K(){
		return keyword("K");
	}
	public SQL KEY(){
		return keyword("KEY");
	}
	public SQL KEYS(){
		return keyword("KEYS");
	}
	public SQL KEY_MEMBER(){
		return keyword("KEY_MEMBER");
	}
	public SQL KEY_TYPE(){
		return keyword("KEY_TYPE");
	}
	public SQL KILL(){
		return keyword("KILL");
	}
	public SQL LABEL(){
		return keyword("LABEL");
	}
	public SQL LAG(){
		return keyword("LAG");
	}
	public SQL LANGUAGE(){
		return keyword("LANGUAGE");
	}
	public SQL LARGE(){
		return keyword("LARGE");
	}
	public SQL LAST(){
		return keyword("LAST");
	}
	public SQL LAST_VALUE(){
		return keyword("LAST_VALUE");
	}
	public SQL LATERAL(){
		return keyword("LATERAL");
	}
	public SQL LC_COLLATE(){
		return keyword("LC_COLLATE");
	}
	public SQL LC_CTYPE(){
		return keyword("LC_CTYPE");
	}
	public SQL LEAD(){
		return keyword("LEAD");
	}
	public SQL LEADING(){
		return keyword("LEADING");
	}
	public SQL LEAKPROOF(){
		return keyword("LEAKPROOF");
	}
	public SQL LEAST(){
		return keyword("LEAST");
	}
	public SQL LEAVE(){
		return keyword("LEAVE");
	}
	public SQL LEFT(){
		return keyword("LEFT");
	}
	public SQL LENGTH(){
		return keyword("LENGTH");
	}
	public SQL LEVEL(){
		return keyword("LEVEL");
	}
	public SQL LIBRARY(){
		return keyword("LIBRARY");
	}
	public SQL LIKE(){
		return keyword("LIKE");
	}
	public SQL LIKE_REGEX(){
		return keyword("LIKE_REGEX");
	}
	public SQL LIMIT(){
		return keyword("LIMIT");
	}
	public SQL LINEAR(){
		return keyword("LINEAR");
	}
	public SQL LINES(){
		return keyword("LINES");
	}
	public SQL LINK(){
		return keyword("LINK");
	}
	public SQL LISTEN(){
		return keyword("LISTEN");
	}
	public SQL LN(){
		return keyword("LN");
	}
	public SQL LOAD(){
		return keyword("LOAD");
	}
	public SQL LOCAL(){
		return keyword("LOCAL");
	}
	public SQL LOCALTIME(){
		return keyword("LOCALTIME");
	}
	public SQL LOCALTIMESTAMP(){
		return keyword("LOCALTIMESTAMP");
	}
	public SQL LOCATION(){
		return keyword("LOCATION");
	}
	public SQL LOCATOR(){
		return keyword("LOCATOR");
	}
	public SQL LOCK(){
		return keyword("LOCK");
	}
	public SQL LONG(){
		return keyword("LONG");
	}
	public SQL LONGBLOB(){
		return keyword("LONGBLOB");
	}
	public SQL LONGTEXT(){
		return keyword("LONGTEXT");
	}
	public SQL LOOP(){
		return keyword("LOOP");
	}
	public SQL LOWER(){
		return keyword("LOWER");
	}
	public SQL LOW_PRIORITY(){
		return keyword("LOW_PRIORITY");
	}
	public SQL M(){
		return keyword("M");
	}
	public SQL MAP(){
		return keyword("MAP");
	}
	public SQL MAPPING(){
		return keyword("MAPPING");
	}
	public SQL MASTER_HEARTBEAT_PERIOD(){
		return keyword("MASTER_HEARTBEAT_PERIOD");
	}
	public SQL MASTER_SSL_VERIFY_SERVER_CERT(){
		return keyword("MASTER_SSL_VERIFY_SERVER_CERT");
	}
	public SQL MATCH(){
		return keyword("MATCH");
	}
	public SQL MATCHED(){
		return keyword("MATCHED");
	}
	public SQL MATERIALIZED(){
		return keyword("MATERIALIZED");
	}
	public SQL MAX(){
		return keyword("MAX");
	}
	public SQL MAXVALUE(){
		return keyword("MAXVALUE");
	}
	public SQL MAX_CARDINALITY(){
		return keyword("MAX_CARDINALITY");
	}
	public SQL MEDIUMBLOB(){
		return keyword("MEDIUMBLOB");
	}
	public SQL MEDIUMINT(){
		return keyword("MEDIUMINT");
	}
	public SQL MEDIUMTEXT(){
		return keyword("MEDIUMTEXT");
	}
	public SQL MEMBER(){
		return keyword("MEMBER");
	}
	public SQL MERGE(){
		return keyword("MERGE");
	}
	public SQL MESSAGE_LENGTH(){
		return keyword("MESSAGE_LENGTH");
	}
	public SQL MESSAGE_OCTET_LENGTH(){
		return keyword("MESSAGE_OCTET_LENGTH");
	}
	public SQL MESSAGE_TEXT(){
		return keyword("MESSAGE_TEXT");
	}
	public SQL METHOD(){
		return keyword("METHOD");
	}
	public SQL MIDDLEINT(){
		return keyword("MIDDLEINT");
	}
	public SQL MIN(){
		return keyword("MIN");
	}
	public SQL MINUS(){
		return keyword("MINUS");
	}
	public SQL MINUTE(){
		return keyword("MINUTE");
	}
	public SQL MINUTE_MICROSECOND(){
		return keyword("MINUTE_MICROSECOND");
	}
	public SQL MINUTE_SECOND(){
		return keyword("MINUTE_SECOND");
	}
	public SQL MINVALUE(){
		return keyword("MINVALUE");
	}
	public SQL MOD(){
		return keyword("MOD");
	}
	public SQL MODE(){
		return keyword("MODE");
	}
	public SQL MODIFIES(){
		return keyword("MODIFIES");
	}
	public SQL MODULE(){
		return keyword("MODULE");
	}
	public SQL MONTH(){
		return keyword("MONTH");
	}
	public SQL MORE(){
		return keyword("MORE");
	}
	public SQL MOVE(){
		return keyword("MOVE");
	}
	public SQL MULTISET(){
		return keyword("MULTISET");
	}
	public SQL MUMPS(){
		return keyword("MUMPS");
	}
	public SQL NAME(){
		return keyword("NAME");
	}
	public SQL NAMES(){
		return keyword("NAMES");
	}
	public SQL NAMESPACE(){
		return keyword("NAMESPACE");
	}
	public SQL NATIONAL(){
		return keyword("NATIONAL");
	}
	public SQL NATURAL(){
		return keyword("NATURAL");
	}
	public SQL NCHAR(){
		return keyword("NCHAR");
	}
	public SQL NCLOB(){
		return keyword("NCLOB");
	}
	public SQL NESTING(){
		return keyword("NESTING");
	}
	public SQL NEW(){
		return keyword("NEW");
	}
	public SQL NEXT(){
		return keyword("NEXT");
	}
	public SQL NFC(){
		return keyword("NFC");
	}
	public SQL NFD(){
		return keyword("NFD");
	}
	public SQL NFKC(){
		return keyword("NFKC");
	}
	public SQL NFKD(){
		return keyword("NFKD");
	}
	public SQL NIL(){
		return keyword("NIL");
	}
	public SQL NO(){
		return keyword("NO");
	}
	public SQL NOCOMPRESS(){
		return keyword("NOCOMPRESS");
	}
	public SQL NONE(){
		return keyword("NONE");
	}
	public SQL NORMALIZE(){
		return keyword("NORMALIZE");
	}
	public SQL NORMALIZED(){
		return keyword("NORMALIZED");
	}
	public SQL NOT(){
		return keyword("NOT");
	}
	public SQL NOTHING(){
		return keyword("NOTHING");
	}
	public SQL NOTIFY(){
		return keyword("NOTIFY");
	}
	public SQL NOTNULL(){
		return keyword("NOTNULL");
	}
	public SQL NOWAIT(){
		return keyword("NOWAIT");
	}
	public SQL NO_WRITE_TO_BINLOG(){
		return keyword("NO_WRITE_TO_BINLOG");
	}
	public SQL NTH_VALUE(){
		return keyword("NTH_VALUE");
	}
	public SQL NTILE(){
		return keyword("NTILE");
	}
	public SQL NULL(){
		return keyword("NULL");
	}
	public SQL NULLABLE(){
		return keyword("NULLABLE");
	}
	public SQL NULLIF(){
		return keyword("NULLIF");
	}
	public SQL NULLS(){
		return keyword("NULLS");
	}
	public SQL NUMBER(){
		return keyword("NUMBER");
	}
	public SQL NUMERIC(){
		return keyword("NUMERIC");
	}
	public SQL OBJECT(){
		return keyword("OBJECT");
	}
	public SQL OCCURRENCES_REGEX(){
		return keyword("OCCURRENCES_REGEX");
	}
	public SQL OCTETS(){
		return keyword("OCTETS");
	}
	public SQL OCTET_LENGTH(){
		return keyword("OCTET_LENGTH");
	}
	public SQL OF(){
		return keyword("OF");
	}
	public SQL OFF(){
		return keyword("OFF");
	}
	public SQL OFFSET(){
		return keyword("OFFSET");
	}
	public SQL OIDS(){
		return keyword("OIDS");
	}
	public SQL OLD(){
		return keyword("OLD");
	}
	public SQL ON(){
		return keyword("ON");
	}
	public SQL ONLY(){
		return keyword("ONLY");
	}
	public SQL OPEN(){
		return keyword("OPEN");
	}
	public SQL OPERATOR(){
		return keyword("OPERATOR");
	}
	public SQL OPTIMIZE(){
		return keyword("OPTIMIZE");
	}
	public SQL OPTION(){
		return keyword("OPTION");
	}
	public SQL OPTIONALLY(){
		return keyword("OPTIONALLY");
	}
	public SQL OPTIONS(){
		return keyword("OPTIONS");
	}
	public SQL OR(){
		return keyword("OR");
	}
	public SQL ORDER(){
		return keyword("ORDER");
	}
	public SQL ORDERING(){
		return keyword("ORDERING");
	}
	public SQL ORDINALITY(){
		return keyword("ORDINALITY");
	}
	public SQL OTHERS(){
		return keyword("OTHERS");
	}
	public SQL OUT(){
		return keyword("OUT");
	}
	public SQL OUTER(){
		return keyword("OUTER");
	}
	public SQL OUTFILE(){
		return keyword("OUTFILE");
	}
	public SQL OUTPUT(){
		return keyword("OUTPUT");
	}
	public SQL OVER(){
		return keyword("OVER");
	}
	public SQL OVERLAPS(){
		return keyword("OVERLAPS");
	}
	public SQL OVERLAY(){
		return keyword("OVERLAY");
	}
	public SQL OVERRIDING(){
		return keyword("OVERRIDING");
	}
	public SQL OWNED(){
		return keyword("OWNED");
	}
	public SQL OWNER(){
		return keyword("OWNER");
	}
	public SQL P(){
		return keyword("P");
	}
	public SQL PAD(){
		return keyword("PAD");
	}
	public SQL PARAMETER(){
		return keyword("PARAMETER");
	}
	public SQL PARAMETER_MODE(){
		return keyword("PARAMETER_MODE");
	}
	public SQL PARAMETER_NAME(){
		return keyword("PARAMETER_NAME");
	}
	public SQL PARAMETER_ORDINAL_POSITION(){
		return keyword("PARAMETER_ORDINAL_POSITION");
	}
	public SQL PARAMETER_SPECIFIC_CATALOG(){
		return keyword("PARAMETER_SPECIFIC_CATALOG");
	}
	public SQL PARAMETER_SPECIFIC_NAME(){
		return keyword("PARAMETER_SPECIFIC_NAME");
	}
	public SQL PARAMETER_SPECIFIC_SCHEMA(){
		return keyword("PARAMETER_SPECIFIC_SCHEMA");
	}
	public SQL PARSER(){
		return keyword("PARSER");
	}
	public SQL PARTIAL(){
		return keyword("PARTIAL");
	}
	public SQL PARTITION(){
		return keyword("PARTITION");
	}
	public SQL PASCAL(){
		return keyword("PASCAL");
	}
	public SQL PASSING(){
		return keyword("PASSING");
	}
	public SQL PASSTHROUGH(){
		return keyword("PASSTHROUGH");
	}
	public SQL PASSWORD(){
		return keyword("PASSWORD");
	}
	public SQL PATH(){
		return keyword("PATH");
	}
	public SQL PERCENT(){
		return keyword("PERCENT");
	}
	public SQL PERCENTILE_CONT(){
		return keyword("PERCENTILE_CONT");
	}
	public SQL PERCENTILE_DISC(){
		return keyword("PERCENTILE_DISC");
	}
	public SQL PERCENT_RANK(){
		return keyword("PERCENT_RANK");
	}
	public SQL PERIOD(){
		return keyword("PERIOD");
	}
	public SQL PERMISSION(){
		return keyword("PERMISSION");
	}
	public SQL PLACING(){
		return keyword("PLACING");
	}
	public SQL PLAN(){
		return keyword("PLAN");
	}
	public SQL PLANS(){
		return keyword("PLANS");
	}
	public SQL PLI(){
		return keyword("PLI");
	}
	public SQL PORTION(){
		return keyword("PORTION");
	}
	public SQL POSITION(){
		return keyword("POSITION");
	}
	public SQL POSITION_REGEX(){
		return keyword("POSITION_REGEX");
	}
	public SQL POWER(){
		return keyword("POWER");
	}
	public SQL PRAGMA(){
		return keyword("PRAGMA");
	}
	public SQL PRECEDES(){
		return keyword("PRECEDES");
	}
	public SQL PRECEDING(){
		return keyword("PRECEDING");
	}
	public SQL PRECISION(){
		return keyword("PRECISION");
	}
	public SQL PREPARE(){
		return keyword("PREPARE");
	}
	public SQL PREPARED(){
		return keyword("PREPARED");
	}
	public SQL PRESERVE(){
		return keyword("PRESERVE");
	}
	public SQL PRIMARY(){
		return keyword("PRIMARY");
	}
	public SQL PRIOR(){
		return keyword("PRIOR");
	}
	public SQL PRIVILEGES(){
		return keyword("PRIVILEGES");
	}
	public SQL PROCEDURAL(){
		return keyword("PROCEDURAL");
	}
	public SQL PROCEDURE(){
		return keyword("PROCEDURE");
	}
	public SQL PROGRAM(){
		return keyword("PROGRAM");
	}
	public SQL PUBLIC(){
		return keyword("PUBLIC");
	}
	public SQL PURGE(){
		return keyword("PURGE");
	}
	public SQL QUERY(){
		return keyword("QUERY");
	}
	public SQL QUOTE(){
		return keyword("QUOTE");
	}
	public SQL RAISE(){
		return keyword("RAISE");
	}
	public SQL RANGE(){
		return keyword("RANGE");
	}
	public SQL RANK(){
		return keyword("RANK");
	}
	public SQL READ(){
		return keyword("READ");
	}
	public SQL READS(){
		return keyword("READS");
	}
	public SQL READ_WRITE(){
		return keyword("READ_WRITE");
	}
	public SQL REAL(){
		return keyword("REAL");
	}
	public SQL REASSIGN(){
		return keyword("REASSIGN");
	}
	public SQL RECHECK(){
		return keyword("RECHECK");
	}
	public SQL RECORD(){
		return keyword("RECORD");
	}
	public SQL RECOVERY(){
		return keyword("RECOVERY");
	}
	public SQL RECURSIVE(){
		return keyword("RECURSIVE");
	}
	public SQL REF(){
		return keyword("REF");
	}
	public SQL REFERENCES(){
		return keyword("REFERENCES");
	}
	public SQL REFERENCING(){
		return keyword("REFERENCING");
	}
	public SQL REFRESH(){
		return keyword("REFRESH");
	}
	public SQL REGEXP(){
		return keyword("REGEXP");
	}
	public SQL REGR_AVGX(){
		return keyword("REGR_AVGX");
	}
	public SQL REGR_AVGY(){
		return keyword("REGR_AVGY");
	}
	public SQL REGR_COUNT(){
		return keyword("REGR_COUNT");
	}
	public SQL REGR_INTERCEPT(){
		return keyword("REGR_INTERCEPT");
	}
	public SQL REGR_R2(){
		return keyword("REGR_R2");
	}
	public SQL REGR_SLOPE(){
		return keyword("REGR_SLOPE");
	}
	public SQL REGR_SXX(){
		return keyword("REGR_SXX");
	}
	public SQL REGR_SXY(){
		return keyword("REGR_SXY");
	}
	public SQL REGR_SYY(){
		return keyword("REGR_SYY");
	}
	public SQL REINDEX(){
		return keyword("REINDEX");
	}
	public SQL RELATIVE(){
		return keyword("RELATIVE");
	}
	public SQL RELEASE(){
		return keyword("RELEASE");
	}
	public SQL RENAME(){
		return keyword("RENAME");
	}
	public SQL REPEAT(){
		return keyword("REPEAT");
	}
	public SQL REPEATABLE(){
		return keyword("REPEATABLE");
	}
	public SQL REPLACE(){
		return keyword("REPLACE");
	}
	public SQL REPLICA(){
		return keyword("REPLICA");
	}
	public SQL REQUIRE(){
		return keyword("REQUIRE");
	}
	public SQL REQUIRING(){
		return keyword("REQUIRING");
	}
	public SQL RESET(){
		return keyword("RESET");
	}
	public SQL RESIGNAL(){
		return keyword("RESIGNAL");
	}
	public SQL RESOURCE(){
		return keyword("RESOURCE");
	}
	public SQL RESPECT(){
		return keyword("RESPECT");
	}
	public SQL RESTART(){
		return keyword("RESTART");
	}
	public SQL RESTORE(){
		return keyword("RESTORE");
	}
	public SQL RESTRICT(){
		return keyword("RESTRICT");
	}
	public SQL RESULT(){
		return keyword("RESULT");
	}
	public SQL RETURN(){
		return keyword("RETURN");
	}
	public SQL RETURNED_CARDINALITY(){
		return keyword("RETURNED_CARDINALITY");
	}
	public SQL RETURNED_LENGTH(){
		return keyword("RETURNED_LENGTH");
	}
	public SQL RETURNED_OCTET_LENGTH(){
		return keyword("RETURNED_OCTET_LENGTH");
	}
	public SQL RETURNED_SQLSTATE(){
		return keyword("RETURNED_SQLSTATE");
	}
	public SQL RETURNING(){
		return keyword("RETURNING");
	}
	public SQL RETURNS(){
		return keyword("RETURNS");
	}
	public SQL REVOKE(){
		return keyword("REVOKE");
	}
	public SQL RIGHT(){
		return keyword("RIGHT");
	}
	public SQL RLIKE(){
		return keyword("RLIKE");
	}
	public SQL ROLE(){
		return keyword("ROLE");
	}
	public SQL ROLLBACK(){
		return keyword("ROLLBACK");
	}
	public SQL ROLLUP(){
		return keyword("ROLLUP");
	}
	public SQL ROUTINE(){
		return keyword("ROUTINE");
	}
	public SQL ROUTINE_CATALOG(){
		return keyword("ROUTINE_CATALOG");
	}
	public SQL ROUTINE_NAME(){
		return keyword("ROUTINE_NAME");
	}
	public SQL ROUTINE_SCHEMA(){
		return keyword("ROUTINE_SCHEMA");
	}
	public SQL ROW(){
		return keyword("ROW");
	}
	public SQL ROWS(){
		return keyword("ROWS");
	}
	public SQL ROW_COUNT(){
		return keyword("ROW_COUNT");
	}
	public SQL ROW_NUMBER(){
		return keyword("ROW_NUMBER");
	}
	public SQL RULE(){
		return keyword("RULE");
	}
	public SQL SAVEPOINT(){
		return keyword("SAVEPOINT");
	}
	public SQL SCALE(){
		return keyword("SCALE");
	}
	public SQL SCHEMA(){
		return keyword("SCHEMA");
	}
	public SQL SCHEMAS(){
		return keyword("SCHEMAS");
	}
	public SQL SCHEMA_NAME(){
		return keyword("SCHEMA_NAME");
	}
	public SQL SCOPE(){
		return keyword("SCOPE");
	}
	public SQL SCOPE_CATALOG(){
		return keyword("SCOPE_CATALOG");
	}
	public SQL SCOPE_NAME(){
		return keyword("SCOPE_NAME");
	}
	public SQL SCOPE_SCHEMA(){
		return keyword("SCOPE_SCHEMA");
	}
	public SQL SCROLL(){
		return keyword("SCROLL");
	}
	public SQL SEARCH(){
		return keyword("SEARCH");
	}
	public SQL SECOND(){
		return keyword("SECOND");
	}
	public SQL SECOND_MICROSECOND(){
		return keyword("SECOND_MICROSECOND");
	}
	public SQL SECTION(){
		return keyword("SECTION");
	}
	public SQL SECURITY(){
		return keyword("SECURITY");
	}
	public SQL SELECT(){
		return keyword("SELECT");
	}
	public SQL SELECTIVE(){
		return keyword("SELECTIVE");
	}
	public SQL SELF(){
		return keyword("SELF");
	}
	public SQL SENSITIVE(){
		return keyword("SENSITIVE");
	}
	public SQL SEPARATOR(){
		return keyword("SEPARATOR");
	}
	public SQL SEQUENCE(){
		return keyword("SEQUENCE");
	}
	public SQL SEQUENCES(){
		return keyword("SEQUENCES");
	}
	public SQL SERIALIZABLE(){
		return keyword("SERIALIZABLE");
	}
	public SQL SERVER(){
		return keyword("SERVER");
	}
	public SQL SERVER_NAME(){
		return keyword("SERVER_NAME");
	}
	public SQL SESSION(){
		return keyword("SESSION");
	}
	public SQL SESSION_USER(){
		return keyword("SESSION_USER");
	}
	public SQL SET(){
		return keyword("SET");
	}
	public SQL SETOF(){
		return keyword("SETOF");
	}
	public SQL SETS(){
		return keyword("SETS");
	}
	public SQL SHARE(){
		return keyword("SHARE");
	}
	public SQL SHOW(){
		return keyword("SHOW");
	}
	public SQL SIGNAL(){
		return keyword("SIGNAL");
	}
	public SQL SIMILAR(){
		return keyword("SIMILAR");
	}
	public SQL SIMPLE(){
		return keyword("SIMPLE");
	}
	public SQL SIZE(){
		return keyword("SIZE");
	}
	public SQL SLOW(){
		return keyword("SLOW");
	}
	public SQL SMALLINT(){
		return keyword("SMALLINT");
	}
	public SQL SNAPSHOT(){
		return keyword("SNAPSHOT");
	}
	public SQL SOME(){
		return keyword("SOME");
	}
	public SQL SOURCE(){
		return keyword("SOURCE");
	}
	public SQL SPACE(){
		return keyword("SPACE");
	}
	public SQL SPATIAL(){
		return keyword("SPATIAL");
	}
	public SQL SPECIFIC(){
		return keyword("SPECIFIC");
	}
	public SQL SPECIFICTYPE(){
		return keyword("SPECIFICTYPE");
	}
	public SQL SPECIFIC_NAME(){
		return keyword("SPECIFIC_NAME");
	}
	public SQL SQL(){
		return keyword("SQL");
	}
	public SQL SQLCODE(){
		return keyword("SQLCODE");
	}
	public SQL SQLERROR(){
		return keyword("SQLERROR");
	}
	public SQL SQLEXCEPTION(){
		return keyword("SQLEXCEPTION");
	}
	public SQL SQLSTATE(){
		return keyword("SQLSTATE");
	}
	public SQL SQLWARNING(){
		return keyword("SQLWARNING");
	}
	public SQL SQL_BIG_RESULT(){
		return keyword("SQL_BIG_RESULT");
	}
	public SQL SQL_CALC_FOUND_ROWS(){
		return keyword("SQL_CALC_FOUND_ROWS");
	}
	public SQL SQL_SMALL_RESULT(){
		return keyword("SQL_SMALL_RESULT");
	}
	public SQL SQRT(){
		return keyword("SQRT");
	}
	public SQL SSL(){
		return keyword("SSL");
	}
	public SQL STABLE(){
		return keyword("STABLE");
	}
	public SQL STANDALONE(){
		return keyword("STANDALONE");
	}
	public SQL START(){
		return keyword("START");
	}
	public SQL STARTING(){
		return keyword("STARTING");
	}
	public SQL STATE(){
		return keyword("STATE");
	}
	public SQL STATEMENT(){
		return keyword("STATEMENT");
	}
	public SQL STATIC(){
		return keyword("STATIC");
	}
	public SQL STATISTICS(){
		return keyword("STATISTICS");
	}
	public SQL STDDEV_POP(){
		return keyword("STDDEV_POP");
	}
	public SQL STDDEV_SAMP(){
		return keyword("STDDEV_SAMP");
	}
	public SQL STDIN(){
		return keyword("STDIN");
	}
	public SQL STDOUT(){
		return keyword("STDOUT");
	}
	public SQL STORAGE(){
		return keyword("STORAGE");
	}
	public SQL STRAIGHT_JOIN(){
		return keyword("STRAIGHT_JOIN");
	}
	public SQL STRICT(){
		return keyword("STRICT");
	}
	public SQL STRIP(){
		return keyword("STRIP");
	}
	public SQL STRUCTURE(){
		return keyword("STRUCTURE");
	}
	public SQL STYLE(){
		return keyword("STYLE");
	}
	public SQL SUBCLASS_ORIGIN(){
		return keyword("SUBCLASS_ORIGIN");
	}
	public SQL SUBMULTISET(){
		return keyword("SUBMULTISET");
	}
	public SQL SUBSTRING(){
		return keyword("SUBSTRING");
	}
	public SQL SUBSTRING_REGEX(){
		return keyword("SUBSTRING_REGEX");
	}
	public SQL SUBTYPE(){
		return keyword("SUBTYPE");
	}
	public SQL SUCCEEDS(){
		return keyword("SUCCEEDS");
	}
	public SQL SUM(){
		return keyword("SUM");
	}
	public SQL SYMMETRIC(){
		return keyword("SYMMETRIC");
	}
	public SQL SYSID(){
		return keyword("SYSID");
	}
	public SQL SYSTEM(){
		return keyword("SYSTEM");
	}
	public SQL SYSTEM_TIME(){
		return keyword("SYSTEM_TIME");
	}
	public SQL SYSTEM_USER(){
		return keyword("SYSTEM_USER");
	}
	public SQL T(){
		return keyword("T");
	}
	public SQL TABAUTH(){
		return keyword("TABAUTH");
	}
	public SQL TABLE(){
		return keyword("TABLE");
	}
	public SQL TABLES(){
		return keyword("TABLES");
	}
	public SQL TABLESAMPLE(){
		return keyword("TABLESAMPLE");
	}
	public SQL TABLESPACE(){
		return keyword("TABLESPACE");
	}
	public SQL TABLE_NAME(){
		return keyword("TABLE_NAME");
	}
	public SQL TEMP(){
		return keyword("TEMP");
	}
	public SQL TEMPLATE(){
		return keyword("TEMPLATE");
	}
	public SQL TEMPORARY(){
		return keyword("TEMPORARY");
	}
	public SQL TERMINATED(){
		return keyword("TERMINATED");
	}
	public SQL TEXT(){
		return keyword("TEXT");
	}
	public SQL THEN(){
		return keyword("THEN");
	}
	public SQL TIES(){
		return keyword("TIES");
	}
	public SQL TIME(){
		return keyword("TIME");
	}
	public SQL TIMESTAMP(){
		return keyword("TIMESTAMP");
	}
	public SQL TIMEZONE_HOUR(){
		return keyword("TIMEZONE_HOUR");
	}
	public SQL TIMEZONE_MINUTE(){
		return keyword("TIMEZONE_MINUTE");
	}
	public SQL TINYBLOB(){
		return keyword("TINYBLOB");
	}
	public SQL TINYINT(){
		return keyword("TINYINT");
	}
	public SQL TINYTEXT(){
		return keyword("TINYTEXT");
	}
	public SQL TO(){
		return keyword("TO");
	}
	public SQL TOKEN(){
		return keyword("TOKEN");
	}
	public SQL TOP_LEVEL_COUNT(){
		return keyword("TOP_LEVEL_COUNT");
	}
	public SQL TRAILING(){
		return keyword("TRAILING");
	}
	public SQL TRANSACTION(){
		return keyword("TRANSACTION");
	}
	public SQL TRANSACTIONS_COMMITTED(){
		return keyword("TRANSACTIONS_COMMITTED");
	}
	public SQL TRANSACTIONS_ROLLED_BACK(){
		return keyword("TRANSACTIONS_ROLLED_BACK");
	}
	public SQL TRANSACTION_ACTIVE(){
		return keyword("TRANSACTION_ACTIVE");
	}
	public SQL TRANSFORM(){
		return keyword("TRANSFORM");
	}
	public SQL TRANSFORMS(){
		return keyword("TRANSFORMS");
	}
	public SQL TRANSLATE(){
		return keyword("TRANSLATE");
	}
	public SQL TRANSLATE_REGEX(){
		return keyword("TRANSLATE_REGEX");
	}
	public SQL TRANSLATION(){
		return keyword("TRANSLATION");
	}
	public SQL TREAT(){
		return keyword("TREAT");
	}
	public SQL TRIGGER(){
		return keyword("TRIGGER");
	}
	public SQL TRIGGER_CATALOG(){
		return keyword("TRIGGER_CATALOG");
	}
	public SQL TRIGGER_NAME(){
		return keyword("TRIGGER_NAME");
	}
	public SQL TRIGGER_SCHEMA(){
		return keyword("TRIGGER_SCHEMA");
	}
	public SQL TRIM(){
		return keyword("TRIM");
	}
	public SQL TRIM_ARRAY(){
		return keyword("TRIM_ARRAY");
	}
	public SQL TRUE(){
		return keyword("TRUE");
	}
	public SQL TRUNCATE(){
		return keyword("TRUNCATE");
	}
	public SQL TRUSTED(){
		return keyword("TRUSTED");
	}
	public SQL TYPE(){
		return keyword("TYPE");
	}
	public SQL TYPES(){
		return keyword("TYPES");
	}
	public SQL UESCAPE(){
		return keyword("UESCAPE");
	}
	public SQL UNBOUNDED(){
		return keyword("UNBOUNDED");
	}
	public SQL UNCOMMITTED(){
		return keyword("UNCOMMITTED");
	}
	public SQL UNDER(){
		return keyword("UNDER");
	}
	public SQL UNDO(){
		return keyword("UNDO");
	}
	public SQL UNENCRYPTED(){
		return keyword("UNENCRYPTED");
	}
	public SQL UNION(){
		return keyword("UNION");
	}
	public SQL UNIQUE(){
		return keyword("UNIQUE");
	}
	public SQL UNKNOWN(){
		return keyword("UNKNOWN");
	}
	public SQL UNLINK(){
		return keyword("UNLINK");
	}
	public SQL UNLISTEN(){
		return keyword("UNLISTEN");
	}
	public SQL UNLOCK(){
		return keyword("UNLOCK");
	}
	public SQL UNLOGGED(){
		return keyword("UNLOGGED");
	}
	public SQL UNNAMED(){
		return keyword("UNNAMED");
	}
	public SQL UNNEST(){
		return keyword("UNNEST");
	}
	public SQL UNSIGNED(){
		return keyword("UNSIGNED");
	}
	public SQL UNTIL(){
		return keyword("UNTIL");
	}
	public SQL UNTYPED(){
		return keyword("UNTYPED");
	}
	public SQL UPDATE(){
		return keyword("UPDATE");
	}
	public SQL UPGRADE(){
		return keyword("UPGRADE");
	}
	public SQL UPPER(){
		return keyword("UPPER");
	}
	public SQL URI(){
		return keyword("URI");
	}
	public SQL USAGE(){
		return keyword("USAGE");
	}
	public SQL USE(){
		return keyword("USE");
	}
	public SQL USER(){
		return keyword("USER");
	}
	public SQL USER_DEFINED_TYPE_CATALOG(){
		return keyword("USER_DEFINED_TYPE_CATALOG");
	}
	public SQL USER_DEFINED_TYPE_CODE(){
		return keyword("USER_DEFINED_TYPE_CODE");
	}
	public SQL USER_DEFINED_TYPE_NAME(){
		return keyword("USER_DEFINED_TYPE_NAME");
	}
	public SQL USER_DEFINED_TYPE_SCHEMA(){
		return keyword("USER_DEFINED_TYPE_SCHEMA");
	}
	public SQL USING(){
		return keyword("USING");
	}
	public SQL UTC_DATE(){
		return keyword("UTC_DATE");
	}
	public SQL UTC_TIME(){
		return keyword("UTC_TIME");
	}
	public SQL UTC_TIMESTAMP(){
		return keyword("UTC_TIMESTAMP");
	}
	public SQL VACUUM(){
		return keyword("VACUUM");
	}
	public SQL VALID(){
		return keyword("VALID");
	}
	public SQL VALIDATE(){
		return keyword("VALIDATE");
	}
	public SQL VALIDATOR(){
		return keyword("VALIDATOR");
	}
	public SQL VALUE(){
		return keyword("VALUE");
	}
	public SQL VALUES(){
		return keyword("VALUES");
	}
	public SQL VALUE_OF(){
		return keyword("VALUE_OF");
	}
	public SQL VARBINARY(){
		return keyword("VARBINARY");
	}
	public SQL VARCHAR(){
		return keyword("VARCHAR");
	}
	public SQL VARCHARACTER(){
		return keyword("VARCHARACTER");
	}
	public SQL VARIADIC(){
		return keyword("VARIADIC");
	}
	public SQL VARYING(){
		return keyword("VARYING");
	}
	public SQL VAR_POP(){
		return keyword("VAR_POP");
	}
	public SQL VAR_SAMP(){
		return keyword("VAR_SAMP");
	}
	public SQL VERBOSE(){
		return keyword("VERBOSE");
	}
	public SQL VERSION(){
		return keyword("VERSION");
	}
	public SQL VERSIONING(){
		return keyword("VERSIONING");
	}
	public SQL VIEW(){
		return keyword("VIEW");
	}
	public SQL VIEWS(){
		return keyword("VIEWS");
	}
	public SQL VIRTUAL(){
		return keyword("VIRTUAL");
	}
	public SQL VOLATILE(){
		return keyword("VOLATILE");
	}
	public SQL WHEN(){
		return keyword("WHEN");
	}
	public SQL WHENEVER(){
		return keyword("WHENEVER");
	}
	public SQL WHERE(){
		return keyword("WHERE");
	}
	public SQL WHILE(){
		return keyword("WHILE");
	}
	public SQL WHITESPACE(){
		return keyword("WHITESPACE");
	}
	public SQL WIDTH_BUCKET(){
		return keyword("WIDTH_BUCKET");
	}
	public SQL WINDOW(){
		return keyword("WINDOW");
	}
	public SQL WITH(){
		return keyword("WITH");
	}
	public SQL WITHIN(){
		return keyword("WITHIN");
	}
	public SQL WITHOUT(){
		return keyword("WITHOUT");
	}
	public SQL WORK(){
		return keyword("WORK");
	}
	public SQL WRAPPER(){
		return keyword("WRAPPER");
	}
	public SQL WRITE(){
		return keyword("WRITE");
	}
	public SQL XML(){
		return keyword("XML");
	}
	public SQL XMLAGG(){
		return keyword("XMLAGG");
	}
	public SQL XMLATTRIBUTES(){
		return keyword("XMLATTRIBUTES");
	}
	public SQL XMLBINARY(){
		return keyword("XMLBINARY");
	}
	public SQL XMLCAST(){
		return keyword("XMLCAST");
	}
	public SQL XMLCOMMENT(){
		return keyword("XMLCOMMENT");
	}
	public SQL XMLCONCAT(){
		return keyword("XMLCONCAT");
	}
	public SQL XMLDECLARATION(){
		return keyword("XMLDECLARATION");
	}
	public SQL XMLDOCUMENT(){
		return keyword("XMLDOCUMENT");
	}
	public SQL XMLELEMENT(){
		return keyword("XMLELEMENT");
	}
	public SQL XMLEXISTS(){
		return keyword("XMLEXISTS");
	}
	public SQL XMLFOREST(){
		return keyword("XMLFOREST");
	}
	public SQL XMLITERATE(){
		return keyword("XMLITERATE");
	}
	public SQL XMLNAMESPACES(){
		return keyword("XMLNAMESPACES");
	}
	public SQL XMLPARSE(){
		return keyword("XMLPARSE");
	}
	public SQL XMLPI(){
		return keyword("XMLPI");
	}
	public SQL XMLQUERY(){
		return keyword("XMLQUERY");
	}
	public SQL XMLROOT(){
		return keyword("XMLROOT");
	}
	public SQL XMLSCHEMA(){
		return keyword("XMLSCHEMA");
	}
	public SQL XMLSERIALIZE(){
		return keyword("XMLSERIALIZE");
	}
	public SQL XMLTABLE(){
		return keyword("XMLTABLE");
	}
	public SQL XMLTEXT(){
		return keyword("XMLTEXT");
	}
	public SQL XMLVALIDATE(){
		return keyword("XMLVALIDATE");
	}
	public SQL XOR(){
		return keyword("XOR");
	}
	public SQL YEAR(){
		return keyword("YEAR");
	}
	public SQL YEAR_MONTH(){
		return keyword("YEAR_MONTH");
	}
	public SQL YES(){
		return keyword("YES");
	}
	public SQL ZEROFILL(){
		return keyword("ZEROFILL");
	}
	public SQL ZONE(){
		return keyword("ZONE");
	}

}